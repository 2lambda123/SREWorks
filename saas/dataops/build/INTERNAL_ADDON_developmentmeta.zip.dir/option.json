{"addons":[{"addonConfig":"{}","addonId":"system-env","addonType":"RESOURCE_ADDON","addonVersion":"_","appId":"dataops","gmtCreate":1666577123000,"gmtModified":1666577123000,"id":53,"name":"system-env","namespaceId":"sreworks","stageId":"dev"},{"addonConfig":"{}","addonId":"productopsv2","addonType":"INTERNAL_ADDON","addonVersion":"_","appId":"dataops","gmtCreate":1645702680000,"gmtModified":1660022361000,"id":18,"name":"productopsv2","namespaceId":"sreworks","stageId":"dev"}],"helms":[{"appId":"dataops","componentType":"HELM","description":"","gmtCreate":1666169010000,"gmtModified":1666169010000,"helmExt":"{\"defaultValuesYaml\":\"rbac:\\n  create: true\\n\\npodSecurityPolicy:\\n  enabled: false\\n\\nserviceAccounts:\\n  alertmanager:\\n    create: true\\n    name:\\n    annotations: {}\\n  nodeExporter:\\n    create: true\\n    name:\\n    annotations: {}\\n  pushgateway:\\n    create: true\\n    name:\\n    annotations: {}\\n  server:\\n    create: true\\n    name:\\n    annotations: {}\\n\\nalertmanager:\\n  enabled: false\\n\\nconfigmapReload:\\n  prometheus:\\n    enabled: false\\n  alertmanager:\\n    enabled: false\\n\\nkubeStateMetrics:\\n  enabled: false\\n\\nnodeExporter:\\n  enabled: false\\n\\n\\nserver:\\n  enabled: true\\n  persistentVolume:\\n    enabled: true\\n    accessModes:\\n      - ReadWriteOnce\\n    storageClass: \\\"{{ Global.STORAGE_CLASS }}\\\"\\n    existingClaim: \\\"\\\"\\n    mountPath: /data\\n    size: 20Gi\\n\\npushgateway:\\n  enabled: false\\n\\nserverFiles:\\n  prometheus.yml:\\n    rule_files:\\n      - /etc/config/recording_rules.yml\\n      - /etc/config/alerting_rules.yml\\n\\n    scrape_configs:\\n      - job_name: prometheus\\n        static_configs:\\n          - targets:\\n            - localhost:9090\\n      - job_name: kubernetes-pods\\n        kubernetes_sd_configs:\\n        - role: pod\\n        relabel_configs:\\n        - action: keep\\n          regex: true\\n          source_labels:\\n          - __meta_kubernetes_pod_annotation_prometheus_io_scrape\\n        - action: replace\\n          regex: (.+)\\n          source_labels:\\n          - __meta_kubernetes_pod_annotation_prometheus_io_path\\n          target_label: __metrics_path__\\n        - action: replace\\n          regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n          replacement: $1:$2\\n          source_labels:\\n          - __address__\\n          - __meta_kubernetes_pod_annotation_prometheus_io_port\\n          target_label: __address__\\n        - action: labelmap\\n          regex: __meta_kubernetes_pod_label_(.+)\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_namespace\\n          target_label: kubernetes_namespace\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_pod_name\\n          target_label: kubernetes_pod_name\",\"repo\":{\"repoPath\":\"saas/dataops/api/prometheus/prometheus-chart\",\"branch\":\"master\",\"repo\":\"https://code.aliyun.com/sreworks_public/mirror.git\",\"ciAccount\":\"public\",\"ciToken\":\"public\"}}","helmPackageId":"prometheus","id":26,"name":"prometheus","namespaceId":"sreworks","options":"options:\n  repoUrl: null\n  chartName: null\n  chartVersion: null\n  repo: https://code.aliyun.com/sreworks_public/mirror.git\n  ciAccount: public\n  ciToken: public\n  repoPath: saas/dataops/api/prometheus/prometheus-chart\n  branch: master\n","packageType":"REPO","stageId":"dev"},{"appId":"dataops","componentType":"HELM","description":"","gmtCreate":1665996642000,"gmtModified":1666108153000,"helmExt":"{\"defaultValuesYaml\":\"clusterName: '{{ Global.STAGE_ID }}-dataops-elasticsearch'\\nimage: sreworks-registry.cn-beijing.cr.aliyuncs.com/mirror/elasticsearch\\nimageTag: 7.10.2-with-plugins\\nreplicas: 1\\nminimumMasterNodes: 1\\nclusterHealthCheckEnable: false\\nextraEnvs:\\n  - name: cluster.initial_master_nodes\\n    value: \\\"\\\"\\n  - name: ELASTIC_PASSWORD\\n    value: \\\"{{ Global.DATA_ES_PASSWORD }}\\\"\\n  - name: ELASTIC_USERNAME\\n    value: \\\"{{ Global.DATA_ES_USER }}\\\"\\nesConfig:\\n  elasticsearch.yml: |\\n    xpack.security.enabled: true\\n    discovery.type: single-node\\n    path.data: /usr/share/elasticsearch/data\\n\\nvolumeClaimTemplate:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: \\\"{{ Global.STORAGE_CLASS }}\\\"\\n  resources:\\n    requests:\\n      storage: 100Gi\",\"repo\":{\"repoPath\":\"saas/dataops/api/elasticsearch/elasticsearch-chart\",\"branch\":\"master\",\"repo\":\"https://code.aliyun.com/sreworks_public/mirror.git\"}}","helmPackageId":"elasticsearch","id":25,"name":"elasticsearch","namespaceId":"sreworks","options":"options:\n  repoUrl: null\n  chartName: null\n  chartVersion: null\n  repo: https://code.aliyun.com/sreworks_public/mirror.git\n  ciAccount: public\n  ciToken: public\n  repoPath: saas/dataops/api/elasticsearch/elasticsearch-chart\n  branch: master\n","packageType":"REPO","stageId":"dev"},{"appId":"dataops","componentType":"HELM","description":"","gmtCreate":1665996594000,"gmtModified":1666107501000,"helmExt":"{\"defaultValuesYaml\":\"image: \\\"sreworks-registry.cn-beijing.cr.aliyuncs.com/mirror/filebeat\\\"\\nimageTag: \\\"7.10.2\\\"\\npodAnnotations:\\n  name: filebeat\\nlabels:\\n  k8s-app: filebeat\\nextraEnvs:\\n  - name: NODE_NAME\\n    valueFrom:\\n      fieldRef:\\n        fieldPath: spec.nodeName\\n\\nhostNetworking: true\\n#dnsPolicy: ClusterFirstWithHostNet\\nfilebeatConfig:\\n  filebeat.yml: |\\n    filebeat.autodiscover:\\n      providers:\\n        - type: kubernetes\\n          node: ${NODE_NAME}\\n          resource: pod\\n          scope: node\\n          templates:\\n            - condition:\\n                equals:\\n                  kubernetes.labels.sreworks-telemetry-log: enable\\n              config:\\n                - type: container\\n                  paths:\\n                    - /var/log/containers/*${data.kubernetes.container.id}.log\\n                  multiline:\\n                    type: pattern\\n                    pattern: '^(\\\\[)?20\\\\d{2}-(1[0-2]|0?[1-9])-(0?[1-9]|[1-2]\\\\d|30|31)'\\n                    negate: true\\n                    match: after\\n                  processors:\\n                    - add_kubernetes_metadata:\\n                        host: ${NODE_NAME}\\n                        matchers:\\n                        - logs_path:\\n                            logs_path: \\\"/var/log/containers/\\\"\\n\\n    setup.ilm.enabled: auto\\n    setup.ilm.rollover_alias: \\\"filebeat\\\"\\n    setup.ilm.pattern: \\\"{now/d}-000001\\\"\\n    setup.template.name: \\\"filebeat\\\"\\n    setup.template.pattern: \\\"filebeat-*\\\"\\n\\n    output.elasticsearch:\\n      hosts: '{{ Global.DATA_ES_HOST }}:{{ Global.DATA_ES_PORT }}'\\n      index: \\\"filebeat-%{+yyyy.MM.dd}\\\"\\n      username: \\\"{{ Global.DATA_ES_USER }}\\\"\\n      password: \\\"{{ Global.DATA_ES_PASSWORD }}\\\"\",\"repo\":{\"repoPath\":\"saas/dataops/api/filebeat/filebeat-chart\",\"branch\":\"master\",\"repo\":\"https://code.aliyun.com/sreworks_public/mirror.git\"}}","helmPackageId":"filebeat","id":24,"name":"filebeat","namespaceId":"sreworks","options":"options:\n  repoUrl: null\n  chartName: null\n  chartVersion: null\n  repo: https://code.aliyun.com/sreworks_public/mirror.git\n  ciAccount: public\n  ciToken: public\n  repoPath: saas/dataops/api/filebeat/filebeat-chart\n  branch: master\n","packageType":"REPO","stageId":"dev"},{"appId":"dataops","componentType":"HELM","description":"","gmtCreate":1665996533000,"gmtModified":1666695445000,"helmExt":"{\"defaultValuesYaml\":\"adminUser: admin\\nadminPassword: sreworks123456\\ngrafana.ini:\\n  security:\\n    allow_embedding: true\\n  server:\\n    root_url: /gateway/dataops-grafana/\\n    serve_from_sub_path: true\\n  auth.basic:\\n    enabled: false\\n  auth.proxy:\\n    enabled: true\\n    auto_sign_up: true\\n    enable_login_token: false\\n    ldap_sync_ttl: 60\\n    sync_ttl: 60\\n    header_name: x-auth-user\\n    headers: \\\"Name:x-auth-user Email:x-auth-email-addr\\\"\\n  auth.anonymous:\\n    enabled: false\\nimage: \\n  repository: sreworks-registry.cn-beijing.cr.aliyuncs.com/mirror/grafana\\n  tag: 7.5.3\\nplugins:\\n  - marcusolsson-json-datasource\\ndatasources:\\n  datasources.yaml:\\n    apiVersion: 1\\n    datasources:\\n    - name: elasticsearch-metricbeat\\n      type: elasticsearch\\n      url: http://{{ Global.DATA_ES_HOST }}:{{ Global.DATA_ES_PORT }}\\n      database: \\\"[metricbeat]*\\\"\\n      basicAuth: true\\n      basicAuthUser: \\\"{{ Global.DATA_ES_USER }}\\\"\\n      basicAuthPassword: \\\"{{ Global.DATA_ES_PASSWORD }}\\\"\\n      access: proxy\\n      isDefault: true\\n      jsonData:\\n        interval: Yearly\\n        timeField: \\\"@timestamp\\\"\\n        esVersion: 70\\n    - name: elasticsearch-filebeat\\n      type: elasticsearch\\n      url: http://{{ Global.DATA_ES_HOST }}:{{ Global.DATA_ES_PORT }}\\n      database: \\\"[filebeat]*\\\"\\n      basicAuth: true\\n      basicAuthUser: \\\"{{ Global.DATA_ES_USER }}\\\"\\n      basicAuthPassword: \\\"{{ Global.DATA_ES_PASSWORD }}\\\"\\n      access: proxy\\n      isDefault: false\\n      jsonData:\\n        interval: Yearly\\n        timeField: \\\"@timestamp\\\"\\n        esVersion: 70\\n        logMessageField: message\\n        logLevelField: fields.level\\n    - name: dataops-prometheus\\n      type: prometheus\\n      access: proxy\\n      httpMethod: POST\\n      url: http://{{ Global.DATA_PROM_HOST}}:{{ Global.DATA_PROM_PORT }}\\n    - name: dataset\\n      type: marcusolsson-json-datasource\\n      url: http://{{ Global.STAGE_ID }}-{{ Global.APP_ID }}-dataset.{{ Global.NAMESPACE_ID }}\\n      access: proxy\\n      isDefault: false\\ndashboards:\\n  flink:\\n    flink-dashboard:\\n      file: dashboards/flink-dashboard.json\\n  cost:\\n    cost-dashboard:\\n      file: dashboards/cost-dashboard.json\\ndashboardProviders:\\n  dashboardproviders.yaml:\\n    apiVersion: 1\\n    providers:\\n    - name: 'flink'\\n      orgId: 1\\n      folder: 'sreworks-dataops'\\n      type: file\\n      disableDeletion: false\\n      editable: true\\n      options:\\n        path: /var/lib/grafana/dashboards/flink\\n    - name: 'cost'\\n      orgId: 1\\n      folder: 'sreworks-dataops'\\n      type: file\\n      disableDeletion: false\\n      editable: true\\n      options:\\n        path: /var/lib/grafana/dashboards/cost\",\"repo\":{\"repoPath\":\"saas/dataops/api/grafana/grafana-chart\",\"branch\":\"master\",\"repo\":\"https://code.aliyun.com/sreworks_public/mirror.git\"}}","helmPackageId":"grafana","id":23,"name":"grafana","namespaceId":"sreworks","options":"options:\n  repoUrl: null\n  chartName: null\n  chartVersion: null\n  repo: https://code.aliyun.com/sreworks_public/mirror.git\n  ciAccount: public\n  ciToken: public\n  repoPath: saas/dataops/api/grafana/grafana-chart\n  branch: master\n","packageType":"REPO","stageId":"dev"},{"appId":"dataops","componentType":"HELM","description":"","gmtCreate":1665996486000,"gmtModified":1666111232000,"helmExt":"{\"defaultValuesYaml\":\"ingress:\\n  enabled: false\\nimage: sreworks-registry.cn-beijing.cr.aliyuncs.com/mirror/kibana\\nelasticsearchHosts: \\\"http://{{ Global.DATA_ES_HOST }}:{{ Global.DATA_ES_PORT }}\\\"\\nkibanaConfig:\\n   kibana.yml: |-\\n     elasticsearch.username: {{ Global.DATA_ES_USER }}\\n     elasticsearch.password: {{ Global.DATA_ES_PASSWORD }}\\nresources:\\n  requests:\\n    cpu: \\\"200m\\\"\\n    memory: 512Mi\\n  limits:\\n    cpu: \\\"300m\\\"\\n    memory: 512Mi\",\"repo\":{\"repoPath\":\"saas/dataops/api/kibana/kibana-chart\",\"branch\":\"master\",\"repo\":\"https://code.aliyun.com/sreworks_public/mirror.git\"}}","helmPackageId":"kibana","id":22,"name":"kibana","namespaceId":"sreworks","options":"options:\n  repoUrl: null\n  chartName: null\n  chartVersion: null\n  repo: https://code.aliyun.com/sreworks_public/mirror.git\n  ciAccount: public\n  ciToken: public\n  repoPath: saas/dataops/api/kibana/kibana-chart\n  branch: master\n","packageType":"REPO","stageId":"dev"},{"appId":"dataops","componentType":"HELM","description":"","gmtCreate":1665996426000,"gmtModified":1665996426000,"helmExt":"{\"defaultValuesYaml\":\"image: sreworks-registry.cn-beijing.cr.aliyuncs.com/mirror/metricbeat\\ndaemonset:\\n  annotations:\\n    name: metricbeat\\n  labels: \\n    k8s-app: metricbeat\\n  enabled: true\\n  extraEnvs:\\n    - name: ELASTICSEARCH_HOSTS\\n      value: \\\"{{ Global.STAGE_ID }}-dataops-elasticsearch-master.{{ Global.NAMESPACE_ID }}.svc.cluster.local\\\"\\n    - name: NODE_NAME\\n      valueFrom:\\n        fieldRef:\\n          fieldPath: spec.nodeName\\n    - name: NODE_IP\\n      valueFrom:\\n        fieldRef:\\n          fieldPath: status.hostIP\\n  hostNetworking: true\\n  #dnsPolicy: ClusterFirstWithHostNet\\n  metricbeatConfig:\\n    metricbeat.yml: |\\n      metricbeat.modules:\\n      - module: kubernetes\\n        metricsets:\\n          - container\\n          - node\\n          - pod\\n          - system\\n          - volume\\n        period: 1m\\n        host: \\\"${NODE_NAME}\\\"\\n        hosts: [\\\"https://${NODE_IP}:10250\\\"]\\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n        ssl.verification_mode: \\\"none\\\"\\n        # If using Red Hat OpenShift remove ssl.verification_mode entry and\\n        # uncomment these settings:\\n        ssl.certificate_authorities:\\n          - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n        processors:\\n        - add_kubernetes_metadata: ~\\n      - module: kubernetes\\n        enabled: true\\n        metricsets:\\n          - event\\n      - module: kubernetes\\n        metricsets:\\n          - proxy\\n        period: 1m\\n        host: ${NODE_NAME}\\n        hosts: [\\\"localhost:10249\\\"]\\n      - module: system\\n        period: 1m\\n        metricsets:\\n          - cpu\\n          - load\\n          - memory\\n          - network\\n          - process\\n          - process_summary\\n        cpu.metrics: [percentages, normalized_percentages]\\n        processes: ['.*']\\n        process.include_top_n:\\n          by_cpu: 5\\n          by_memory: 5\\n      - module: system\\n        period: 1m\\n        metricsets:\\n          - filesystem\\n          - fsstat\\n        processors:\\n        - drop_event.when.regexp:\\n            system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'\\n\\n      metricbeat.autodiscover:\\n        providers:\\n          - type: kubernetes\\n            scope: cluster\\n            node: ${NODE_NAME}\\n            resource: service\\n            templates:\\n              - condition:\\n                  equals:\\n                    kubernetes.labels.sreworks-telemetry-metric: enable\\n                config:\\n                  - module: http\\n                    metricsets:\\n                      - json\\n                    period: 1m\\n                    hosts: [\\\"http://${data.host}:10080\\\"]\\n                    namespace: \\\"${data.kubernetes.namespace}#${data.kubernetes.service.name}\\\"\\n                    path: \\\"/\\\"\\n                    method: \\\"GET\\\"\\n\\n          - type: kubernetes\\n            scope: cluster\\n            node: ${NODE_NAME}\\n            unique: true\\n            templates:\\n              - config:\\n                  - module: kubernetes\\n                    hosts: [\\\"kubecost-kube-state-metrics.sreworks-client.svc.cluster.local:8080\\\"]\\n                    period: 1m\\n                    add_metadata: true\\n                    metricsets:\\n                      - state_node\\n                      - state_deployment\\n                      - state_daemonset\\n                      - state_replicaset\\n                      - state_pod\\n                      - state_container\\n                      - state_cronjob\\n                      - state_resourcequota\\n                      - state_statefulset\\n                      - state_service\\n\\n      processors:\\n        - add_cloud_metadata:\\n      \\n      setup.ilm.enabled: auto\\n      setup.ilm.rollover_alias: \\\"metricbeat\\\"\\n      setup.ilm.pattern: \\\"{now/d}-000001\\\"\\n      setup.template.name: \\\"metricbeat\\\"\\n      setup.template.pattern: \\\"metricbeat-*\\\"\\n\\n      output.elasticsearch:\\n        hosts: '${ELASTICSEARCH_HOSTS:{{ Global.STAGE_ID }}-dataops-elasticsearch-master:9200}'\\n        index: \\\"metricbeat-%{+yyyy.MM.dd}\\\"\\n\\n  resources:\\n    requests:\\n      cpu: \\\"100m\\\"\\n      memory: \\\"100Mi\\\"\\n    limits:\\n      cpu: \\\"1000m\\\"\\n      memory: \\\"500Mi\\\"\\ndeployment: \\n  enabled: false\\n\\nkube_state_metrics:\\n  enabled: false\\n\\nclusterRoleRules:\\n- apiGroups: [\\\"\\\"]\\n  resources:\\n  - nodes\\n  - namespaces\\n  - events\\n  - pods\\n  verbs: [\\\"get\\\", \\\"list\\\", \\\"watch\\\"]\\n- apiGroups: [\\\"extensions\\\"]\\n  resources:\\n  - replicasets\\n  verbs: [\\\"get\\\", \\\"list\\\", \\\"watch\\\"]\\n- apiGroups: [\\\"apps\\\"]\\n  resources:\\n  - statefulsets\\n  - deployments\\n  - replicasets\\n  verbs: [\\\"get\\\", \\\"list\\\", \\\"watch\\\"]\\n- apiGroups: [\\\"\\\"]\\n  resources:\\n  - nodes/stats\\n  - nodes\\n  - services\\n  - endpoints\\n  - pods\\n  verbs: [\\\"get\\\", \\\"list\\\", \\\"watch\\\"]\\n- nonResourceURLs:\\n    - \\\"/metrics\\\"\\n  verbs:\\n    - get\\n- apiGroups:\\n    - coordination.k8s.io\\n  resources:\\n    - leases\\n  verbs:\\n    - '*'\\n\\nserviceAccount: \\\"metricbeat-sa\\\" \\n\",\"repo\":{\"repoPath\":\"saas/dataops/api/metricbeat/metricbeat-chart\",\"branch\":\"master\",\"repo\":\"https://code.aliyun.com/sreworks_public/mirror.git\",\"ciAccount\":\"public\",\"ciToken\":\"public\"}}","helmPackageId":"metricbeat","id":21,"name":"metricbeat","namespaceId":"sreworks","options":"options:\n  repoUrl: null\n  chartName: null\n  chartVersion: null\n  repo: https://code.aliyun.com/sreworks_public/mirror.git\n  ciAccount: public\n  ciToken: public\n  repoPath: saas/dataops/api/metricbeat/metricbeat-chart\n  branch: master\n","packageType":"REPO","stageId":"dev"},{"appId":"dataops","componentType":"HELM","description":"","gmtCreate":1665996318000,"gmtModified":1666148958000,"helmExt":"{\"defaultValuesYaml\":\"global:\\n  storageClass: \\\"{{ Global.STORAGE_CLASS }}\\\"\\nprimary:\\n  service:\\n    type: ClusterIP\\n  persistence:\\n    size: 50Gi\\n  extraFlags: '--max-connect-errors=1000 --max_connections=10000'\\nreplication:\\n  enabled: false\\nimage:\\n  registry: sreworks-registry.cn-beijing.cr.aliyuncs.com\\n  repository: mirror/mysql\\n  tag: 8.0.22-debian-10-r44\\nauth:\\n  rootPassword: cb56b5is5e21_c359b42223\",\"repo\":{\"repoPath\":\"saas/dataops/api/mysql/mysql-chart\",\"branch\":\"master\",\"repo\":\"https://code.aliyun.com/sreworks_public/mirror.git\"}}","helmPackageId":"mysql","id":20,"name":"mysql","namespaceId":"sreworks","options":"options:\n  repoUrl: null\n  chartName: null\n  chartVersion: null\n  repo: https://code.aliyun.com/sreworks_public/mirror.git\n  ciAccount: public\n  ciToken: public\n  repoPath: saas/dataops/api/mysql/mysql-chart\n  branch: master\n","packageType":"REPO","stageId":"dev"},{"appId":"dataops","componentType":"HELM","description":"","gmtCreate":1665996240000,"gmtModified":1666852324000,"helmExt":"{\"defaultValuesYaml\":\"oap:\\n  image:\\n    repository: sreworks-registry.cn-beijing.cr.aliyuncs.com/mirror/skywalking-oap-server-utc-8\\n    tag: 9.2.0\\n  storageType: elasticsearch7\\n  javaOpts: -Xmx1g -Xms1g\\n\\nui:\\n  image:\\n    tag: 9.2.0 \\n    \\nelasticsearch:\\n  enabled: false\\n  config:\\n    host: '{{ Global.STAGE_ID }}-dataops-elasticsearch-master.{{ Global.NAMESPACE_ID }}.svc.cluster.local'\\n    port:\\n      http: 9200\\n    user: \\\"{{ Global.DATA_ES_USER }}\\\"\\n    password: \\\"{{ Global.DATA_ES_PASSWORD }}\\\"\",\"repo\":{\"repoPath\":\"saas/dataops/api/skywalking/skywalking-chart\",\"branch\":\"master\",\"repo\":\"https://code.aliyun.com/sreworks_public/mirror.git\"}}","helmPackageId":"skywalking","id":19,"name":"skywalking","namespaceId":"sreworks","options":"options:\n  repoUrl: null\n  chartName: null\n  chartVersion: null\n  repo: https://code.aliyun.com/sreworks_public/mirror.git\n  ciAccount: public\n  ciToken: public\n  repoPath: saas/dataops/api/skywalking/skywalking-chart\n  branch: master\n","packageType":"REPO","stageId":"dev"},{"appId":"dataops","componentType":"HELM","description":"","gmtCreate":1665996176000,"gmtModified":1666159031000,"helmExt":"{\"defaultValuesYaml\":\"acceptCommunityEditionLicense: true\\nvvp:\\n  registry: sreworks-registry.cn-beijing.cr.aliyuncs.com/mirror\\n  persistence:\\n    type: local\\n  blobStorage:\\n    baseUri: s3://vvp\\n    s3:\\n      endpoint: http://sreworks-minio.sreworks:9000\\n  globalDeploymentDefaults: |\\n    spec:\\n      state: RUNNING\\n      template:\\n        spec:\\n          resources:\\n            jobmanager:\\n              cpu: 0.5\\n              memory: 1G\\n            taskmanager:\\n              cpu: 0.5\\n              memory: 1G\\n          flinkConfiguration:\\n            state.backend: filesystem\\n            taskmanager.memory.managed.fraction: 0.0 # no managed memory needed for filesystem statebackend\\n            high-availability: vvp-kubernetes\\n            metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter\\n            execution.checkpointing.interval: 10s\\n            execution.checkpointing.externalized-checkpoint-retention: RETAIN_ON_CANCELLATION\\n  sqlService:\\n    pool:\\n      coreSize: 1\\n      maxSize: 1\\nblobStorageCredentials:\\n  s3:\\n    accessKeyId: \\\"{{ Global.MINIO_ACCESS_KEY }}\\\"\\n    secretAccessKey: \\\"{{ Global.MINIO_SECRET_KEY }}\\\"\\npersistentVolume:\\n  enabled: true\\n  accessModes:\\n    - ReadWriteOnce\\n  annotations: {}\\n  size: 20Gi\\n  storageClass: \\\"{{ Global.STORAGE_CLASS }}\\\"\\n  subPath: ''\",\"repo\":{\"repoPath\":\"saas/dataops/api/ververica-platform/ververica-platform-chart\",\"branch\":\"master\",\"repo\":\"https://code.aliyun.com/sreworks_public/mirror.git\"}}","helmPackageId":"ververica-platform","id":18,"name":"ververica-platform","namespaceId":"sreworks","options":"options:\n  repoUrl: null\n  chartName: null\n  chartVersion: null\n  repo: https://code.aliyun.com/sreworks_public/mirror.git\n  ciAccount: public\n  ciToken: public\n  repoPath: saas/dataops/api/ververica-platform/ververica-platform-chart\n  branch: master\n","packageType":"REPO","stageId":"dev"}],"microservices":[{"appId":"dataops","arch":"","componentType":"K8S_MICROSERVICE","description":"","gmtCreate":1665995842000,"gmtModified":1666332110000,"id":172,"microServiceExt":"{\"initContainerList\":[{\"dockerfilePath\":\"Dockerfile-db-migration\",\"name\":\"db-migration\",\"repoPath\":\"saas/dataops/api/pmdb\",\"type\":\"shell\"},{\"dockerfilePath\":\"Dockerfile\",\"name\":\"metric-flink\",\"repoPath\":\"saas/dataops/api/metric-flink\",\"type\":\"shell\"}],\"kind\":\"Deployment\",\"envKeyList\":[\"DB_HOST\",\"DB_PORT\",\"DB_USER\",\"DB_PASSWORD\",\"DB_NAME\",\"DATA_DB_HOST\",\"DATA_DB_PORT\",\"DATA_DB_USER\",\"DATA_DB_PASSWORD\",\"DATA_DB_PMDB_NAME=pmdb\",\"DATA_SKYW_HOST={{Global.STAGE_ID}}-dataops-skywalking-oap\",\"DATA_SKYW_PORT=11800\",\"DATA_SKYW_ENABLE=true\",\"KAFKA_ENDPOINT=sreworks-kafka.sreworks:9092\",\"DATA_ES_HOST\",\"DATA_ES_PORT\",\"DATA_ES_USER\",\"DATA_ES_PASSWORD\",\"DATA_DB_HEALTH_NAME=sw_saas_health\",\"MINIO_ENDPOINT=sreworks-minio.sreworks:9000\",\"MINIO_ACCESS_KEY\",\"MINIO_SECRET_KEY\",\"KAFKA_URL=sreworks-kafka.sreworks:9092\",\"ES_URL\",\"HEALTH_ENDPOINT={{Global.STAGE_ID}}-health-health.sreworks.svc.cluster.local:80\",\"VVP_ENDPOINT={{Global.STAGE_ID}}-dataops-ververica-platform-ververica-platform\"],\"repo\":{\"ciAccount\":\"public\",\"ciToken\":\"public\",\"dockerfilePath\":\"Dockerfile\",\"repo\":\"https://code.aliyun.com/sreworks_public/mirror.git\",\"repoDomain\":\"https:\",\"repoGroup\":\"\",\"repoPath\":\"saas/dataops/api/pmdb\",\"repoProject\":\"code.aliyun.com\",\"repoType\":\"THIRD_REPO\"},\"launch\":{\"gatewayAuthEnabled\":false,\"gatewayRoute\":\"/pmdb/**\",\"replicas\":1,\"servicePorts\":\"7001\"}}","microServiceId":"pmdb","name":"pmdb","namespaceId":"sreworks","options":"options:\n  kind: Deployment\n  containers:\n  - build:\n      args: {}\n      dockerfileTemplateArgs: {}\n      repo: https://code.aliyun.com/sreworks_public/mirror.git\n      dockerfileTemplate: Dockerfile\n      ciAccount: public\n      ciToken: public\n      repoPath: saas/dataops/api/pmdb\n      branch: master\n    name: pmdb\n  env:\n  - DB_HOST\n  - DB_PORT\n  - DB_USER\n  - DB_PASSWORD\n  - DB_NAME\n  - DATA_DB_HOST\n  - DATA_DB_PORT\n  - DATA_DB_USER\n  - DATA_DB_PASSWORD\n  - DATA_DB_PMDB_NAME\n  - DATA_SKYW_HOST\n  - DATA_SKYW_PORT\n  - DATA_SKYW_ENABLE\n  - KAFKA_ENDPOINT\n  - DATA_ES_HOST\n  - DATA_ES_PORT\n  - DATA_ES_USER\n  - DATA_ES_PASSWORD\n  - DATA_DB_HEALTH_NAME\n  - MINIO_ENDPOINT\n  - MINIO_ACCESS_KEY\n  - MINIO_SECRET_KEY\n  - KAFKA_URL\n  - ES_URL\n  - HEALTH_ENDPOINT\n  - VVP_ENDPOINT\n  initContainers:\n  - build:\n      args: {}\n      dockerfileTemplateArgs: {}\n      repo: https://code.aliyun.com/sreworks_public/mirror.git\n      dockerfileTemplate: Dockerfile-db-migration\n      ciAccount: public\n      ciToken: public\n      repoPath: saas/dataops/api/pmdb\n      branch: master\n    name: db-migration\n  - build:\n      args: {}\n      dockerfileTemplateArgs: {}\n      repo: https://code.aliyun.com/sreworks_public/mirror.git\n      dockerfileTemplate: Dockerfile\n      ciAccount: public\n      ciToken: public\n      repoPath: saas/dataops/api/metric-flink\n      branch: master\n    name: metric-flink\n","stageId":"dev"},{"appId":"dataops","arch":"","componentType":"K8S_MICROSERVICE","description":"","gmtCreate":1665987717000,"gmtModified":1666307771000,"id":168,"microServiceExt":"{\"initContainerList\":[{\"dockerfilePath\":\"Dockerfile-db-migration\",\"name\":\"db-migration\",\"repoPath\":\"saas/dataops/api/warehouse\",\"type\":\"shell\"}],\"kind\":\"Deployment\",\"envKeyList\":[\"DATA_DB_WAREHOUSE_NAME=sw_saas_warehouse\",\"DATA_DB_HOST\",\"DATA_DB_PORT\",\"DATA_ES_HOST\",\"DATA_ES_PORT\",\"DATA_ES_USER\",\"DATA_ES_PASSWORD\",\"DATA_DB_USER\",\"DATA_DB_PASSWORD\"],\"repo\":{\"ciAccount\":\"public\",\"ciToken\":\"public\",\"dockerfilePath\":\"Dockerfile\",\"repo\":\"https://gitee.com/sreworks/sreworks.git\",\"repoDomain\":\"https:\",\"repoGroup\":\"\",\"repoPath\":\"saas/dataops/api/warehouse\",\"repoProject\":\"gitee.com\",\"repoType\":\"THIRD_REPO\"},\"launch\":{\"gatewayAuthEnabled\":false,\"gatewayRoute\":\"/warehouse/**\",\"replicas\":1,\"servicePorts\":\"7001\"}}","microServiceId":"warehouse","name":"warehouse","namespaceId":"sreworks","options":"options:\n  kind: Deployment\n  containers:\n  - build:\n      args: {}\n      dockerfileTemplateArgs: {}\n      repo: https://gitee.com/sreworks/sreworks.git\n      dockerfileTemplate: Dockerfile\n      ciAccount: public\n      ciToken: public\n      repoPath: saas/dataops/api/warehouse\n      branch: master\n    name: warehouse\n  env:\n  - DATA_DB_WAREHOUSE_NAME\n  - DATA_DB_HOST\n  - DATA_DB_PORT\n  - DATA_ES_HOST\n  - DATA_ES_PORT\n  - DATA_ES_USER\n  - DATA_ES_PASSWORD\n  - DATA_DB_USER\n  - DATA_DB_PASSWORD\n  initContainers:\n  - build:\n      args: {}\n      dockerfileTemplateArgs: {}\n      repo: https://gitee.com/sreworks/sreworks.git\n      dockerfileTemplate: Dockerfile-db-migration\n      ciAccount: public\n      ciToken: public\n      repoPath: saas/dataops/api/warehouse\n      branch: master\n    name: db-migration\n","stageId":"dev"},{"appId":"dataops","arch":"","componentType":"K8S_MICROSERVICE","description":"","gmtCreate":1665986979000,"gmtModified":1666307802000,"id":167,"microServiceExt":"{\"initContainerList\":[{\"dockerfilePath\":\"Dockerfile-db-migration\",\"name\":\"db-migration\",\"repoPath\":\"saas/dataops/api/dataset\",\"type\":\"shell\"},{\"dockerfilePath\":\"Dockerfile-db-migration-datasource\",\"name\":\"db-migration-datasource\",\"repoPath\":\"saas/dataops/api/dataset\",\"type\":\"shell\"}],\"kind\":\"Deployment\",\"envKeyList\":[\"DATA_DB_PASSWORD\",\"DATA_DB_DATASET_NAME=sw_saas_dataset\",\"DATA_DB_PMDB_NAME=pmdb\",\"DATA_ES_HOST={{Global.STAGE_ID}}-dataops-elasticsearch-master\",\"DATA_ES_PORT=9200\",\"DATA_ES_INDEX=metricbeat-7.13.0\",\"DATA_DB_DATASOURCE_NAME=sw_saas_datasource\",\"DATA_SKYW_HOST={{Global.STAGE_ID}}-dataops-skywalking-oap\",\"DATA_SKYW_PORT=11800\",\"DATA_SKYW_ENABLE=true\",\"DATA_DB_HOST\",\"DATA_DB_PORT\",\"DATA_ES_USER\",\"DATA_ES_PASSWORD\",\"DATA_DB_USER\"],\"repo\":{\"ciAccount\":\"public\",\"ciToken\":\"public\",\"dockerfilePath\":\"Dockerfile\",\"repo\":\"https://gitee.com/sreworks/sreworks.git\",\"repoDomain\":\"https:\",\"repoGroup\":\"\",\"repoPath\":\"saas/dataops/api/dataset\",\"repoProject\":\"gitee.com\",\"repoType\":\"THIRD_REPO\"},\"launch\":{\"gatewayAuthEnabled\":false,\"gatewayRoute\":\"/dataset/**\",\"replicas\":1,\"servicePorts\":\"7001\"}}","microServiceId":"dataset","name":"dataset","namespaceId":"sreworks","options":"options:\n  kind: Deployment\n  containers:\n  - build:\n      args: {}\n      dockerfileTemplateArgs: {}\n      repo: https://gitee.com/sreworks/sreworks.git\n      dockerfileTemplate: Dockerfile\n      ciAccount: public\n      ciToken: public\n      repoPath: saas/dataops/api/dataset\n      branch: master\n    name: dataset\n  env:\n  - DATA_DB_PASSWORD\n  - DATA_DB_DATASET_NAME\n  - DATA_DB_PMDB_NAME\n  - DATA_ES_HOST\n  - DATA_ES_PORT\n  - DATA_ES_INDEX\n  - DATA_DB_DATASOURCE_NAME\n  - DATA_SKYW_HOST\n  - DATA_SKYW_PORT\n  - DATA_SKYW_ENABLE\n  - DATA_DB_HOST\n  - DATA_DB_PORT\n  - DATA_ES_USER\n  - DATA_ES_PASSWORD\n  - DATA_DB_USER\n  initContainers:\n  - build:\n      args: {}\n      dockerfileTemplateArgs: {}\n      repo: https://gitee.com/sreworks/sreworks.git\n      dockerfileTemplate: Dockerfile-db-migration\n      ciAccount: public\n      ciToken: public\n      repoPath: saas/dataops/api/dataset\n      branch: master\n    name: db-migration\n  - build:\n      args: {}\n      dockerfileTemplateArgs: {}\n      repo: https://gitee.com/sreworks/sreworks.git\n      dockerfileTemplate: Dockerfile-db-migration-datasource\n      ciAccount: public\n      ciToken: public\n      repoPath: saas/dataops/api/dataset\n      branch: master\n    name: db-migration-datasource\n","stageId":"dev"}]}